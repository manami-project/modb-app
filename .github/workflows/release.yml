name: 'Releases'

on:
  release:
    types:
      - 'published'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
      - name: Set executable flag on gradlew
        run: chmod +x gradlew
      - name: Execute tests and upload release
        env:
          GH_PACKAGES_READ_TOKEN: ${{ secrets.PACKAGES_READ_TOKEN }}
          GH_PACKAGES_RELEASE_TOKEN: ${{ secrets.PACKAGES_RELEASE_TOKEN }}
        run: ./gradlew test lib:publish -Prelease.version=$RELEASE_VERSION
      - name: 'Remove outdated pre-releases'
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'io.github.manamiproject.${{ github.event.repository.name }}'
          package-type: 'maven'
          min-versions-to-keep: 1
          delete-only-pre-release-versions: 'true'
      - name: 'Remove outdated releases'
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'io.github.manamiproject.${{ github.event.repository.name }}'
          package-type: 'maven'
          min-versions-to-keep: 5
      - name: Build executable fatJar
        env:
          GH_PACKAGES_READ_TOKEN: ${{ secrets.PACKAGES_READ_TOKEN }}
        run: ./gradlew shadowJar
      - name: Upload file to release
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/libs/modb-app.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: fetch-latest-release
        name: Fetch latest release tag
        run: |
          version=$(git tag --sort=creatordate | tail -2 | head -1)
          echo "PREVIOUS_VERSION=$version" >> $GITHUB_OUTPUT
#      - name: Delete outdated release assets
#        uses: mknejp/delete-release-assets@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          tag: ${{ steps.fetch-latest-release.outputs.PREVIOUS_VERSION }}
#          assets: modb-app.jar
#          fail-if-no-release: false
#          fail-if-no-assets: false
